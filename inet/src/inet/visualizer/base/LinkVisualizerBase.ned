//
// Copyright (C) 2016 OpenSim Ltd.
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public License
// as published by the Free Software Foundation; either version 2
// of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program; if not, see <http://www.gnu.org/licenses/>.
//

package inet.visualizer.base;

//
// This is a base module for network link visualizer simple modules. It
// keeps track of active links in a network. A link between two network node is
// considered active if a packet is sent recently between their link layers.
// Active links are not displayed by default, see the module parameters for how
// to enable the visualization. The actual visualization of active links is done
// in derived modules.
//
// This module subscribes for packetReceivedFromUpperSignal and
// packetSentToUpperSignal on the module determined by the subscriptionModule
// parameter. If the visualizer receives a packetReceivedFromUpperSignal from
// a MAC protocol module, then it stores the corresponding packet id. If later
// on the visualizer receives a packetSentToUpperSignal from another MAC
// protocol module with the same packet id, then it adds an active link between
// the source and the destination nodes. After a certain amount of time the link
// becomes inactive unless it is reinforced by another packet. This module also
// subscribes for mobilityStateChangedSignal to be able to follow the movement
// of mobile nodes.
//
// @see ~LinkCanvasVisualizer, ~LinkOsgVisualizer, 
// ~ILinkVisualizer, and ~LinkVisualizerBase
//
simple LinkVisualizerBase extends VisualizerBase
{
    parameters:
        string subscriptionModule = default(""); // module path where the visualizer subscribes for link layer signals, root module by default
        string packetNameFilter = default(""); // which packets are considered to determine active links, matches no packets by default
        string lineColor = default("black"); // link line color, black by default
        double lineWidth = default(3); // link line width
        string lineStyle = default("solid"); // link line style (solid, dashed, dotted)
        double opacityHalfLife @unit(s) = default(1s); // how quickly inactive links fade away, opacity halves every second by default
        @class(LinkVisualizerBase);
}
