%description:
RadioMedium NeighborCache test based on Ping results.

The
  NeighborCache_Grid.test
  NeighborCache_NeighborList.test
  NeighborCache_Off.test
  NeighborCache_QuadTree.test
are same simulations, except the configured radiomedium.neighborcache (choosed in %extraargs).

When NeighborCache_Off.test is FAILED, then should replace ping outputs in %contains from simulation stdout
in all NeighborCache tests, and rerun these.
When NighborCache_Off test is OK, but some other NeighborCache test is FAILED, then you must check:
 - NeighborCache_*.test files should be same except the %extraargs line.
 - verify the used NeighborCache code in failed simulation.
%#--------------------------------------------------------------------------------------------------------------
%extraargs: -c QuadTree
%#--------------------------------------------------------------------------------------------------------------
%file: test.ned

import inet.common.lifecycle.LifecycleController;
import inet.common.scenario.ScenarioManager;
import inet.networklayer.configurator.ipv4.IPv4NetworkConfigurator;
import inet.networklayer.ipv4.RoutingTableRecorder;
import inet.node.aodv.AODVRouter;
import inet.physicallayer.idealradio.IdealRadioMedium;


network NeighborCacheTest
{
    parameters:
        int numHosts;
    submodules:
        radioMedium: IdealRadioMedium {
            parameters:
                @display("p=50,50");
        }
        configurator: IPv4NetworkConfigurator {
            parameters:
                config = xml("<config><interface hosts='*' address='145.236.x.x' netmask='255.255.0.0'/></config>");
                @display("p=50,100");
        }
        routingTableRecorder: RoutingTableRecorder {
            parameters:
                @display("p=50,150");
        }
        lifecycleController: LifecycleController {
            parameters:
                @display("p=50,200");
        }
        scenarioManager: ScenarioManager {
            parameters:
                script = default(xml("<scenario/>"));
                @display("p=50,250");
        }
        host[numHosts]: AODVRouter {
            parameters:
                @display("i=device/pocketpc_s;r=,,#707070");
        }
    connections allowunconnected:
}


%#--------------------------------------------------------------------------------------------------------------
%inifile: omnetpp.ini

[General]
network = NeighborCacheTest
record-eventlog = true
num-rngs = 3
sim-time-limit = 60s
cmdenv-express-mode = true
cmdenv-status-frequency = 1000s
**.mobility.rng-0 = 1
**.wlan[*].mac.rng-0 = 2
ned-path = .;../../../../src;../../lib

# channel physical parameters
**.wlan[*].typename = "IdealWirelessNic"
**.wlan[*].bitrate = 2Mbps
**.wlan[*].mac.address = "auto"
**.wlan[*].mac.headerLength = 20B
**.wlan[*].radioType = "IdealRadio"
**.wlan[*].radio.transmitter.headerBitLength = 100b
**.wlan[*].radio.transmitter.communicationRange = 250m
**.wlan[*].radio.transmitter.interferenceRange = 0m
**.wlan[*].radio.transmitter.detectionRange = 0m
**.wlan[*].radio.receiver.ignoreInterference = true
*.numHosts = 20

# mobility
**.host[0..1].mobilityType = "StationaryMobility"
**.host[1].mobility.initialX = 600m
**.host[1].mobility.initialY = 600m
**.host[2..20].mobilityType = "LinearMobility"
**.host[2..20].mobility.speed = 8mps
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.constraintAreaMinX = 0m
**.mobility.constraintAreaMinY = 0m
**.mobility.constraintAreaMaxX = 600m
**.mobility.constraintAreaMaxY = 600m
**.host[2..20].mobility.changeInterval = normal(5s, 0.1s)
**.host[2..20].mobility.changeAngleBy = normal(0deg, 30deg)

# ping app
*.host[0].numPingApps = 1
*.host[0].pingApp[0].startTime = uniform(1s,5s)
*.host[0].pingApp[0].printPing = true
*.host[0].pingApp[0].destAddr = "host[1](ipv4)"

# lifecycle
**.hasStatus = true

# AODV protocol settings
**.aodv.activeRouteTimeout = 3s

# neighbor cache settigns
**.neighborCache.refillPeriod = 1s

# radio medium
**.radioMedium.mediumLimitCache.communicationRange = 250m
**.radioMedium.rangeFilter = "communicationRange"

[Config NoCache]

[Config Grid]
**.radioMedium.neighborCacheType = "GridNeighborCache"
**.radioMedium.neighborCache.cellSizeX = 100m
**.radioMedium.neighborCache.cellSizeY = 100m
**.radioMedium.neighborCache.cellSizeZ = 100m

[Config NeighborList]
**.radioMedium.neighborCacheType = "NeighborListNeighborCache"
**.radioMedium.neighborCache.range = 250m

[Config QuadTree]
**.radioMedium.neighborCacheType = "QuadTreeNeighborCache"
**.radioMedium.neighborCache.maxNumOfPointsPerQuadrant = 2

%#--------------------------------------------------------------------------------------------------------------
%contains: stdout
NeighborCacheTest.host[0].pingApp[0]: reply of 60 bytes from 145.236.0.2 icmp_seq=0 ttl=24 time=346.035830618 msec (ping0)
NeighborCacheTest.host[0].pingApp[0]: reply of 60 bytes from 145.236.0.2 icmp_seq=1 ttl=24 time=3.733845919 msec (ping1)
NeighborCacheTest.host[0].pingApp[0]: reply of 60 bytes from 145.236.0.2 icmp_seq=2 ttl=24 time=3.733935305 msec (ping2)
NeighborCacheTest.host[0].pingApp[0]: reply of 60 bytes from 145.236.0.2 icmp_seq=4 ttl=24 time=348.018611022 msec (ping4)
NeighborCacheTest.host[0].pingApp[0]: reply of 60 bytes from 145.236.0.2 icmp_seq=6 ttl=22 time=2454.574607211 msec (ping6)
NeighborCacheTest.host[0].pingApp[0]: reply of 60 bytes from 145.236.0.2 icmp_seq=8 ttl=22 time=554.556128044 msec (ping8)
NeighborCacheTest.host[0].pingApp[0]: reply of 60 bytes from 145.236.0.2 icmp_seq=9 ttl=23 time=1457.797385194 msec (ping9)
NeighborCacheTest.host[0].pingApp[0]: reply of 60 bytes from 145.236.0.2 icmp_seq=10 ttl=23 time=458.264141068 msec (ping10)
NeighborCacheTest.host[0].pingApp[0]: reply of 60 bytes from 145.236.0.2 icmp_seq=11 ttl=23 time=4.198992315 msec (ping11)
NeighborCacheTest.host[0].pingApp[0]: reply of 60 bytes from 145.236.0.2 icmp_seq=12 ttl=22 time=7.88484168 msec (ping12)
NeighborCacheTest.host[0].pingApp[0]: reply of 60 bytes from 145.236.0.2 icmp_seq=26 ttl=24 time=345.703772704 msec (ping26)
NeighborCacheTest.host[0].pingApp[0]: reply of 60 bytes from 145.236.0.2 icmp_seq=27 ttl=24 time=3.733203321 msec (ping27)
NeighborCacheTest.host[0].pingApp[0]: reply of 60 bytes from 145.236.0.2 icmp_seq=28 ttl=24 time=3.73318704 msec (ping28)
NeighborCacheTest.host[0].pingApp[0]: reply of 60 bytes from 145.236.0.2 icmp_seq=29 ttl=24 time=3.733176414 msec (ping29)
NeighborCacheTest.host[0].pingApp[0]: reply of 60 bytes from 145.236.0.2 icmp_seq=30 ttl=24 time=3.733172041 msec (ping30)
NeighborCacheTest.host[0].pingApp[0]: reply of 60 bytes from 145.236.0.2 icmp_seq=31 ttl=24 time=3.733174561 msec (ping31)
NeighborCacheTest.host[0].pingApp[0]: reply of 60 bytes from 145.236.0.2 icmp_seq=33 ttl=24 time=348.10873031 msec (ping33)
NeighborCacheTest.host[0].pingApp[0]: reply of 60 bytes from 145.236.0.2 icmp_seq=34 ttl=24 time=3.733005365 msec (ping34)
NeighborCacheTest.host[0].pingApp[0]: reply of 60 bytes from 145.236.0.2 icmp_seq=35 ttl=24 time=3.733073201 msec (ping35)
NeighborCacheTest.host[0].pingApp[0]: reply of 60 bytes from 145.236.0.2 icmp_seq=36 ttl=24 time=3.733153559 msec (ping36)
NeighborCacheTest.host[0].pingApp[0]: reply of 60 bytes from 145.236.0.2 icmp_seq=37 ttl=24 time=3.733246695 msec (ping37)
NeighborCacheTest.host[0].pingApp[0]: reply of 60 bytes from 145.236.0.2 icmp_seq=38 ttl=24 time=3.733352459 msec (ping38)
NeighborCacheTest.host[0].pingApp[0]: reply of 60 bytes from 145.236.0.2 icmp_seq=39 ttl=24 time=3.733470259 msec (ping39)
NeighborCacheTest.host[0].pingApp[0]: reply of 60 bytes from 145.236.0.2 icmp_seq=41 ttl=24 time=1668.62340028 msec (ping41)
NeighborCacheTest.host[0].pingApp[0]: reply of 60 bytes from 145.236.0.2 icmp_seq=42 ttl=24 time=669.090135863 msec (ping42)
NeighborCacheTest.host[0].pingApp[0]: reply of 60 bytes from 145.236.0.2 icmp_seq=43 ttl=24 time=3.733016087 msec (ping43)
NeighborCacheTest.host[0].pingApp[0]: reply of 60 bytes from 145.236.0.2 icmp_seq=44 ttl=24 time=3.732943561 msec (ping44)
NeighborCacheTest.host[0].pingApp[0]: reply of 60 bytes from 145.236.0.2 icmp_seq=45 ttl=24 time=3.732879902 msec (ping45)
NeighborCacheTest.host[0].pingApp[0]: reply of 60 bytes from 145.236.0.2 icmp_seq=46 ttl=24 time=3.73282489 msec (ping46)
NeighborCacheTest.host[0].pingApp[0]: reply of 60 bytes from 145.236.0.2 icmp_seq=47 ttl=24 time=3.732778238 msec (ping47)
NeighborCacheTest.host[0].pingApp[0]: reply of 60 bytes from 145.236.0.2 icmp_seq=48 ttl=24 time=3.732739596 msec (ping48)
NeighborCacheTest.host[0].pingApp[0]: reply of 60 bytes from 145.236.0.2 icmp_seq=49 ttl=24 time=3.732708576 msec (ping49)
NeighborCacheTest.host[0].pingApp[0]: reply of 60 bytes from 145.236.0.2 icmp_seq=55 ttl=23 time=1150.927439905 msec (ping55)
** Event #
%#--------------------------------------------------------------------------------------------------------------
%not-contains: stdout
-- check module destructor
%#--------------------------------------------------------------------------------------------------------------
